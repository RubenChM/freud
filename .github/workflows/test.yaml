name: test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:

  push:
    branches:
      - "main"
      - "next"

  workflow_dispatch:

defaults:
  run:
    shell: bash -leo pipefail {0}

jobs:
  run_tests:
    name: Unit test [py${{ matrix.python }} ${{ matrix.os }}]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-24.04]
        python: ['39', '310', '311', '312', '313']
        include:
          # Test macOS, windows, and ARM Linux on oldest and latest versions.
          - os: 'ubuntu-24.04-arm'
            python: '313'
          - os: 'macos-14'
            python: '313'
          - os: 'windows-latest'
            python: '313'
          - os: 'windows-latest'
            python: '39'
          - os: 'macos-14'
            python: '39'

    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: true

      - name: Create Python Environment
        uses: mamba-org/setup-micromamba@b09ef9b599704322748535812ca03efb2625677b # v2.0.5
        with:
          micromamba-version: '2.0.2-2'
          environment-name: test
          environment-file: .github/workflows/environments/py${{ matrix.python }}-conda-lock.yml

      - name: Build and Install freud
        run: |
          uv pip install . --no-build-isolation --no-deps -v

      - name: Run Tests
        run: |
          # Enable tests only for nanobind-converted modules
          pytest tests/test_box_box.py -v
          pytest tests/test_parallel.py -v
          pytest tests/test_locality_*.py -v
          pytest tests/test_data.py -v
          pytest tests/test_pmft.py -v
          pytest tests/test_util.py -v
          pytest tests/test_environment*.py -v
          pytest tests/test_diffraction*.py -v
          pytest tests/test_interface.py -v
          pytest tests/test_msd_msd.py -v
          pytest tests/test_cluster.py -v
          pytest tests/test_order_*.py -v
          # pytest tests/ -v

  tests_complete:
    name: All tests
    if: always()
    needs: [run_tests]
    runs-on: ubuntu-latest

    steps:
    - run: jq --exit-status 'all(.result == "success")' <<< '${{ toJson(needs) }}'
    - name: Done
      run: echo "Done."
